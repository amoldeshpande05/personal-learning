apiVersion: apps/v1
kind: Deployment
metadata:
  name: loan-approval-asset
  namespace: default
  labels:
    app: loan-approval-asset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loan-approval-asset
  template:
    metadata:
      labels:
        app: loan-approval-asset
    spec:
      containers:
        - name: loan-approval-asset
          image: amoldeshpande/loanapproval-v1:latest
          ports:
            - containerPort: 8080


This is how the sample app looks like......


kubectl apply -f deployment.yml

check the deployment which is running in a pod by the command
kubectl get pods
loan-approval-asset-58d9dd65ff-5zqmt   1/1     Running   0          3m9s


Now in order to access this outside in a browser, then expose the service

kubectl expose pod loan-approval-asset-58d9dd65ff-5zqmt --port=8080 --name=loan-asset --type=NodePort


kubectl get services 
copy the port in which it's exposed, then 
kubectl get nodes -o wide

to get the external ip address, then merge it and run.